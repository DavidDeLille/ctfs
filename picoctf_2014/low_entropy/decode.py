c = 51935627829478461189099563098437558456954289973752038061332368035364779298997562059047272001745735894893013853883939635697283766893912948994706422956477537921723148859034516218148515993348118097276631538756795629109738609006053552602140623664842665052440933334606837472355741830280967530082282057888744933918
p = 12068007193924458934136437678747032125702047288192605563386647134926126290032925205587466786811951860570462107503408192389036293790565313661792631609456701
q = 11290942893206290336467162060839444758991526481896862143525109986063294905531141292368885863941910700698869187227122590028398079775349558555477255622057419
e = 65537

def mult_inv(e, t):
	return extended_Euclidian_algo(t, e, 0, 1) % t

def extended_Euclidian_algo(r0, r1, t0, t1):
	q = r0/r1
	r2 = r0%r1
	if r2 == 0:
		return t1
	t2 = t0 - q*t1
	return extended_Euclidian_algo(r1,r2, t1, t2)

n = p*q
t = (p-1)*(q-1)
d = mult_inv(e, t)

m = pow(c, d, n)
print m
print format(m, '02x')
print str(format(m, '02x'))
print str(format(m, '02x')).decode('hex')